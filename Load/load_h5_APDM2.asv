function h5_APDM2 = load_h5_APDM2(file)
% h5_APDM2 = load_h5_APDM2(file)
% inputs  - file, directory and file name to import
% outputs - dataout, structure containing data from a h5 file from APDM.
% Remarks
% - This code is written to load data exported from a h5 file file that was
%   created by running an h5 file through APDM processing code written in
%   Python. These files differed notably from other results files processed
%   with the same code but a different algorithm. Because of this the code 
%   pulls data out of the h5 file recursively. All of the data is pulled 
outThese files typically had 'Analysis'
%   appended to the file name.
% Future Work
% - With experience working with other APDM h5 analysis files this function
%   could be made more general.
% Nov 2022 - Created by Ben Senderling
%
% Copyright 2022 Movement and Applied Imaging Lab, Department of Physical
% Therapy and Athletic Training, Sargent College, Boston University
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are
% met:
%
% 1. Redistributions of source code must retain the above copyright notice,
%    this list of conditions and the following disclaimer.
%
% 2. Redistributions in binary form must reproduce the above copyright
%    notice, this list of conditions and the following disclaimer in the
%    documentation and/or other materials provided with the distribution.
%
% 3. Neither the name of the copyright holder nor the names of its
%    contributors may be used to endorse or promote products derived from
%    this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
% IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
% THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
% PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
% CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
% EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
% PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
% PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
% LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
% NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
% SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
%% Begin Code

dbstop if error

% Pull the information from the h5 file and save it as the meta data.
h5_APDM2.meta = h5info(file);
h5_APDM2 = getData(file, h5_APDM2.meta.Groups, h5_APDM2);


% Much of this commented code was used for other APDM h5 analysis files but
% was found not to work with these specific files from stairclimbing.
% for i = 1:length({h5_APDM2.meta.Groups(2).Groups.Name})
%     name = h5readatt(file,[h5_APDM2.meta.Groups(2).Groups(i).Name '/Configuration'], 'Label 0');
name = 'measures';%regexprep(name, {' ', char(0)}, {'_', ''});
%     time = double(h5read(file,[h5_APDM2.meta.Groups(2).Groups(i).Name '/Time']));
%     h5_APDM2.(name).freq = 1/mean(diff(time - time(1))/1e6);
h5_APDM2.(name).data.dur = h5read(file, [h5_APDM2.meta.Groups.Name '/Duration'])';
% end

end

function h5_APDM2 = getData(file, h5_struct, h5_APDM2)

for i = 1:length(h5_struct)
    if ~isempty(h5_struct(i).Groups)
        h5_APDM2 = getData(file, h5_struct(i).Groups, h5_APDM2);
    end
    
    if ~isempty(h5_struct(i).Datasets)
        measure = regexprep(h5_struct(i).Name, {' ', '/'}, {''});
        for j = 1:length(h5_struct(i).Datasets)
            name = regexprep(h5_struct(i).Datasets(j).Name, {' ', char(0), '+'}, {'', '', 'Plus'});
            h5_APDM2.(measure).data.(name) = h5read(file, [h5_struct(i).Name '/' h5_struct(i).Datasets(j).Name]);
        end
    end
end

end



















